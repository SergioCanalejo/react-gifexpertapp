{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","newCategory","trim","length","categories","Set","type","value","onChange","target","getGifs","category","a","fetch","encodeURI","resp","json","data","map","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","gifs","loading","state","setState","useEffect","then","useFetchGifs","gif","key","GifExperApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAcZC,mBAAS,IAdG,mBAczCC,EAdyC,KAc7BC,EAd6B,KAehD,OACE,0BAAMC,SAXa,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAcL,EAAWM,OAC3BD,EAAYE,QACdT,GAAc,SAACU,GAAD,mBAAoB,IAAIC,IAAJ,CAASJ,GAAT,mBAAyBG,SAE7DP,EAAc,MAMZ,4CACA,2BAAOS,KAAK,OAAOC,MAAOX,EAAYY,SAjBtB,SAACT,GACnBF,EAAcE,EAAEU,OAAOF,Y,uBCLdG,EAAO,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,4DACN,mCACH,uCAFS,SAIFC,MAAM,GAAD,OAFZ,uCAEY,oBAHT,mCAGS,cACQC,UAAUH,GADlB,cAJH,cAIfI,EAJe,gBAOEA,EAAKC,OAPP,uBAObC,EAPa,EAObA,KAPa,kBASdA,EAAKC,KAAI,YACd,MAAO,CACLC,GAFuC,EAAxBA,GAGfC,MAHuC,EAApBA,MAInBC,IAJuC,EAAbC,OAIdC,iBAAiBF,SAbZ,4CAAH,sDCEPG,EAAc,SAAC,GAAuB,EAArBL,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACvC,OACE,yBAAKI,UAAU,0CACb,yBAAKC,IAAKL,EAAKM,IAAKP,IACpB,2BAAIA,KCFGQ,EAAU,SAAC,GAAkB,IAAhBjB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdhB,mBAAS,CACjCkC,KAAM,GACNC,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAUxC,OAJAC,qBAAU,WACRvB,EAAQC,GAAUuB,MAAK,SAACL,GAAD,OAAUG,EAAS,CAAEH,KAAMA,EAAMC,SAAS,SAChE,CAACnB,IAEGoB,EDRmBI,CAAaxB,GAA/BkB,EAD+B,EAC/BA,KAAMC,EADyB,EACzBA,QAEd,OACE,oCACE,4BAAKnB,GACJmB,GAAW,uBAAGL,UAAU,oCAAb,WACZ,yBAAKA,UAAU,aACZI,EAAKX,KAAI,SAACkB,GAAD,OACR,kBAAC,EAAD,eAAaC,IAAKD,EAAIjB,IAAQiB,UEOzBE,EAhBK,WAAO,IAAD,EACY3C,mBAAS,CAAC,cADtB,mBACjBS,EADiB,KACLV,EADK,KAGxB,OACE,oCACE,2CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAECU,EAAWc,KAAI,SAACP,GACf,OAAO,kBAAC,EAAD,CAAS0B,IAAG,cAAS1B,GAAYA,SAAUA,S,YCR1D4B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAGFC,SAASC,eAAe,U","file":"static/js/main.67cd0c73.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n  const handleInput = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newCategory = inputValue.trim();\n    if (newCategory.length) {\n      setCategories((categories) => [...new Set([newCategory, ...categories])]);\n    }\n    setInputValue(\"\");\n  };\n\n  const [inputValue, setInputValue] = useState(\"\");\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Add Category</h2>\n      <input type=\"text\" value={inputValue} onChange={handleInput} />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","export const getGifs = async (category) => {\n  const apikey = \"Lg650M1xweZLTkCkFPvPUFIh4cWZDFdT\";\n  const url = \"https://api.giphy.com/v1/gifs/search\";\n\n  const resp = await fetch(\n    `${url}?api_key=${apikey}&q=${encodeURI(category)}&limit=10`\n  );\n  const { data } = await resp.json();\n\n  return data.map(({ id, title, images }) => {\n    return {\n      id,\n      title,\n      url: images.downsized_medium.url,\n    };\n  });\n};\n","import React from \"react\";\n\nexport const GifGridItem = ({ id, title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ category }) => {\n  const { gifs, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3>{category}</h3>\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n      <div className=\"card-grid\">\n        {gifs.map((gif) => (\n          <GifGridItem key={gif.id} {...gif} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    gifs: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((gifs) => setState({ gifs: gifs, loading: false }));\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nconst GifExperApp = () => {\n  const [categories, setCategories] = useState([\"One Piece\"]);\n\n  return (\n    <>\n      <h2>GifExperApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n\n      {categories.map((category) => {\n        return <GifGrid key={`cat-${category}`} category={category} />;\n      })}\n    </>\n  );\n};\n\nexport default GifExperApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExperApp from \"./GifExpertApp\";\nimport \"./index.css\";\nimport \"animate.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExperApp />\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}